{"version":3,"file":"game-df5c8b7e721b49c77415.js","sources":["webpack:///webpack/bootstrap 8401ebe907d5a1c5c86d","webpack:///app/javascript/packs/game.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8401ebe907d5a1c5c86d","const robotPiece = document.querySelector('.robot-piece');\nconst btns = document.querySelectorAll(\".race-btns\");\n\n// check if a tile have an empty neighbour\nfunction canMove(direction) {\n  // Propiedades del tile\n  let robot = document.querySelector('.robot');\n\n  // Direction\n  switch (direction) {\n    case 'left' :\n      // LEFT\n      if(robot.cellIndex == 0) return false;\n      let left = robot.previousElementSibling.className.includes('obstaculo');\n      return !left;\n      break;\n    case 'up' :\n      // UP\n      if (robot.parentElement.rowIndex == 0) return false;\n      let up = robot.parentElement.previousElementSibling.children[robot.cellIndex].className.includes('obstaculo');\n      return !up;\n      break;\n    case 'right':\n      // RIGHT\n      if(!robot.nextElementSibling) return false;\n      let right = robot.nextElementSibling.className.includes('obstaculo');\n      return !right;\n      break;\n\n    case 'down' :\n      // DOWN\n      if (!robot.parentElement.nextElementSibling ) return false;\n      let down = robot.parentElement.nextElementSibling.children[robot.cellIndex].className.includes('obstaculo');\n      return !down;\n      break;\n      default:\n      console.log('Something went wrong');\n  }\n}\n\n// Move the tile\nfunction moveTile(direction) {\n  // Propiedades del tile\n  let robot = document.querySelector('.robot');\n  let move;\n  let x;\n  let y;\n\n  // Direction\n  switch (direction) {\n    case 'left' :\n\n      move = robot.previousElementSibling;\n      x = move.offsetLeft;\n      y = move.offsetTop;\n      // Change absolute position of the robot to the\n      robot.classList.toggle(\"robot\");\n      move.classList.add(\"robot\");\n      // LEFT\n      // Add #robot to previousSibling && remove #robot to Actual cell\n      // Return boolean\n\n      break;\n\n    case 'up' :\n      move = robot.parentElement.previousElementSibling.children[robot.cellIndex];\n      x = move.offsetLeft;\n      y = move.offsetTop;\n      // Change absolute position of the robot to the\n      robot.classList.toggle(\"robot\");\n      move.classList.add(\"robot\")\n\n      // UP\n      // Get actual row by Parent Element && previousRow && cell by CellIndex\n      break;\n\n    case 'right' :\n      move = robot.nextElementSibling;\n      x = move.offsetLeft;\n      y = move.offsetTop;\n      // Change absolute position of the robot to the\n      robot.classList.toggle(\"robot\");\n      move.classList.add(\"robot\");\n\n      // RIGHT\n      // Add #robot to nextElementSibling && remove #robot to Actual cell\n      break;\n\n    case 'down' :\n      move = robot.parentElement.nextElementSibling.children[robot.cellIndex];\n      x = move.offsetLeft;\n      y = move.offsetTop;\n      // Change absolute position of the robot to the\n      robot.classList.toggle(\"robot\");\n      move.classList.add(\"robot\")\n      // DOWN\n      // Get actual row by Parent Element && nextRow && cell by CellIndex\n      break;\n    default:\n      console.log('Something went wrong');\n  }\n  setPiecePosition();\n}\n\n\nlet playerMoves = [];\n\nfunction queueMove () {\n   const inputID = this.getAttribute('data-input');\n  const times = document.getElementById(inputID).value;\n  const direction = this.id;\n\n}\n\n//function printMoves() {};\n\nfunction moveToDirection() {\n  const inputID = this.getAttribute('data-input');\n  const times = document.getElementById(inputID).value;\n  const direction = this.id;\n\n  multipleMoves(direction, times);\n}\n\nbtns.forEach(btn => {\n  btn.onclick = moveToDirection;\n});\n\nvar multipleMoves = function(direction, times) {\n  return new Promise(function(resolve) {\n    for (let i = 0; i < times; i++){\n      if (canMove(direction)) {\n        moveTile(direction);\n      }\n    }\n    setTimeout( _ => {\n      resolve(window);\n    }, 1000);\n  });\n}\n\nwindow.multipleMoves = multipleMoves;\n\nfunction setPiecePosition() {\n  console.log('Set piece')\n  let robot = document.querySelector('.robot');\n  robotPiece.style.left = robot.offsetLeft + 'px'\n  robotPiece.style.top = robot.offsetTop + 'px'\n}\n\n// Initial Game State\nsetPiecePosition();\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/packs/game.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA;AAoDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}